{"remainingRequest":"/Users/chsvk/Chsvk/Practice/forum/node_modules/babel-loader/lib/index.js!/Users/chsvk/Chsvk/Practice/forum/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chsvk/Chsvk/Practice/forum/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chsvk/Chsvk/Practice/forum/src/components/AppDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chsvk/Chsvk/Practice/forum/src/components/AppDate.vue","mtime":1547543803176},{"path":"/Users/chsvk/Chsvk/Practice/forum/node_modules/cache-loader/dist/cjs.js","mtime":1544642927071},{"path":"/Users/chsvk/Chsvk/Practice/forum/node_modules/babel-loader/lib/index.js","mtime":1547450502191},{"path":"/Users/chsvk/Chsvk/Practice/forum/node_modules/cache-loader/dist/cjs.js","mtime":1544642927071},{"path":"/Users/chsvk/Chsvk/Practice/forum/node_modules/vue-loader/lib/index.js","mtime":1547450503259}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  props: {\n    timeStamp: {\n      required: true,\n      type: Number\n    }\n  },\n  computed: {\n    readableDate: function readableDate() {\n      return moment.unix(this.timeStamp).format('MMMM Do YYYY, h:mm:ss a');\n    }\n  },\n  filters: {\n    differenceFromNow: function differenceFromNow(date) {\n      return moment.unix(date).fromNow();\n    }\n  }\n};",{"version":3,"sources":["AppDate.vue"],"names":[],"mappings":";;;;;AAKA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,KAAA,EACA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,SAAA,EAAA,MAAA,CAAA,yBAAA,CAAA;AACA;AAHA,GARA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,IADA,EACA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA;AACA;AAHA;AAbA,CAAA","sourcesContent":["<template>\n    <span :title=\"readableDate\">{{timeStamp | differenceFromNow}}</span>\n</template>\n\n<script>\nimport moment from 'moment'\nexport default {\n    props: \n        {\n            timeStamp: {\n                required: true,\n                type: Number\n            }\n        },\n    computed: {\n        readableDate(){\n            return moment.unix(this.timeStamp).format('MMMM Do YYYY, h:mm:ss a')\n        }\n    },\n    filters: {\n        differenceFromNow(date){\n            return moment.unix(date).fromNow()\n        }\n    }\n    \n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components"}]}